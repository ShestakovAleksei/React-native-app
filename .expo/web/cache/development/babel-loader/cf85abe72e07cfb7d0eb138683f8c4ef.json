{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\front-end dev\\\\react native\\\\react-native_restAPI\\\\React-native-app\\\\src\\\\features\\\\PhotosFeed\\\\PhotosFeed.tsx\";\n\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Api } from \"../../api/Api\";\nexport var PhotosFeed = function PhotosFeed() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      photos = _useState2[0],\n      setPhotos = _useState2[1];\n\n  useEffect(function () {\n    Api.getPhotos().then(function (res) {\n      setPhotos(res.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  if (photos.length > 0) {\n    var Photo = function Photo(_ref) {\n      var title = _ref.title,\n          url = _ref.url;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, title), React.createElement(Image, {\n        style: styles.tinyLogo,\n        source: {\n          uri: url\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    var renderPhoto = function renderPhoto(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, React.createElement(Photo, {\n        title: item.title,\n        url: item.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    return React.createElement(SafeAreaView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, React.createElement(FlatList, {\n      data: photos,\n      renderItem: renderPhoto,\n      keyExtractor: function keyExtractor(photo) {\n        return photo.id.toString();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }\n    }, \"Array is empty\");\n  }\n};\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 50\n  },\n  tinyLogo: {\n    padding: 10,\n    width: 300,\n    height: 300\n  }\n});","map":{"version":3,"sources":["D:/front-end dev/react native/react-native_restAPI/React-native-app/src/features/PhotosFeed/PhotosFeed.tsx"],"names":["React","useEffect","useState","Api","PhotosFeed","photos","setPhotos","getPhotos","then","res","data","catch","err","console","log","length","Photo","title","url","styles","tinyLogo","uri","renderPhoto","item","photo","id","toString","StyleSheet","create","container","paddingTop","padding","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAEA,SAASC,GAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,kBACFF,QAAQ,CAAC,EAAD,CADN;AAAA;AAAA,MACvBG,MADuB;AAAA,MACfC,SADe;;AAG9BL,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,GAAG,CAACI,SAAJ,GACGC,IADH,CACQ,UAACC,GAAD,EAAS;AACbH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AACD,KAHH,EAIGC,KAJH,CAIS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;;AAUA,MAAIP,MAAM,CAACU,MAAP,GAAgB,CAApB,EAAuB;AACrB,QAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,UAAUC,GAAV,QAAUA,GAAV;AAAA,aACZ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOD,KAAP,CADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEE,MAAM,CAACC,QAArB;AAA+B,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEH;AAAP,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADY;AAAA,KAAd;;AAOA,QAAMI,WAAW,GAAG,SAAdA,WAAc;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aAClB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,IAAI,CAACN,KAAnB;AAA0B,QAAA,GAAG,EAAEM,IAAI,CAACL,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADkB;AAAA,KAApB;;AAMA,WACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEb,MAAhB;AAAwB,MAAA,UAAU,EAAEiB,WAApC;AAAiD,MAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,eAAWA,KAAK,CAACC,EAAN,CAASC,QAAT,EAAX;AAAA,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAnBD,MAmBO;AACL,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;AACF,CAnCM;AAqCP,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH,GADoB;AAI/BV,EAAAA,QAAQ,EAAE;AACRW,IAAAA,OAAO,EAAE,EADD;AAERC,IAAAA,KAAK,EAAE,GAFC;AAGRC,IAAAA,MAAM,EAAE;AAHA;AAJqB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FlatList, Image, SafeAreaView, StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\nimport { Api } from \"../../api/Api\";\r\n\r\nexport const PhotosFeed = () => {\r\n  const [photos, setPhotos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Api.getPhotos()\r\n      .then((res) => {\r\n        setPhotos(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  if (photos.length > 0) {\r\n    const Photo = ({ title, url }) => (\r\n      <View>\r\n        <Text>{title}</Text>\r\n        <Image style={styles.tinyLogo} source={{ uri: url }} />\r\n      </View>\r\n    );\r\n\r\n    const renderPhoto = ({ item }) => (\r\n      <TouchableOpacity>\r\n        <Photo title={item.title} url={item.url} />\r\n      </TouchableOpacity>\r\n    );\r\n\r\n    return (\r\n      <SafeAreaView>\r\n        <FlatList data={photos} renderItem={renderPhoto} keyExtractor={(photo) => photo.id.toString()} />\r\n      </SafeAreaView>\r\n    );\r\n  } else {\r\n    return <Text>Array is empty</Text>;\r\n  }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingTop: 50,\r\n  },\r\n  tinyLogo: {\r\n    padding: 10,\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}